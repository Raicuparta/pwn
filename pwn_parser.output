Terminals unused in grammar

   tBEGIN
   tEND


Rules useless in parser due to conflicts

   21 ftype: type


State 17 conflicts: 2 shift/reduce
State 19 conflicts: 1 shift/reduce
State 31 conflicts: 2 shift/reduce


Grammar

    0 $accept: declist $end

    1 declist: decl
    2        | declist decl

    3 stmtlist: stmt
    4         | stmtlist stmt

    5 literal: tSTRING
    6        | tREAL
    7        | tINTEGER
    8        | tNOOB

    9 decl: qualifier type var
   10     | qualifier func
   11     | qualifier func '=' literal
   12     | qualifier func block
   13     | qualifier func '=' literal block

   14 qualifier: tLOCAL
   15          | tIMPORT
   16          | /* empty */

   17 var: tIDENTIFIER

   18 func: ftype tIDENTIFIER '(' args ')'
   19     | ftype tIDENTIFIER '(' ')'

   20 ftype: '!'
   21      | type

   22 args: var
   23     | args ',' var

   24 arg: tINTEGER
   25    | /* empty */

   26 type: '#'
   27     | '%'
   28     | '$'
   29     | '*'
   30     | "<#>"
   31     | "<%>"
   32     | "<$>"
   33     | "<*>"

   34 block: '{' declist stmtlist '}'
   35      | '{' stmtlist '}'
   36      | "{}"

   37 stmt: expr ';'
   38     | expr tPRINT
   39     | expr tPRINTLN
   40     | tREAD
   41     | tNEXT arg ';'
   42     | tSTOP arg ';'
   43     | tRETURN ';'
   44     | tREPEAT '(' expr ';' expr ';' expr ')' stmt
   45     | tIF '(' expr ')' stmt
   46     | tIF '(' expr ')' stmt tELSE stmt
   47     | block

   48 expr: tINTEGER
   49     | tSTRING
   50     | '-' expr
   51     | '~' expr
   52     | expr '+' expr
   53     | expr '-' expr
   54     | expr '*' expr
   55     | expr '/' expr
   56     | expr '%' expr
   57     | expr '<' expr
   58     | expr '|' expr
   59     | expr '&' expr
   60     | expr '>' expr
   61     | expr tGE expr
   62     | expr tLE expr
   63     | expr tNE expr
   64     | expr tEQ expr
   65     | '(' expr ')'
   66     | lval '=' expr
   67     | lval '=' '[' tINTEGER ']'

   68 lval: index
   69     | var

   70 index: lval '[' lval ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 20
'#' (35) 26
'$' (36) 28
'%' (37) 27 56
'&' (38) 59
'(' (40) 18 19 44 45 46 65
')' (41) 18 19 44 45 46 65
'*' (42) 29 54
'+' (43) 52
',' (44) 23
'-' (45) 50 53
'/' (47) 55
';' (59) 37 41 42 43 44
'<' (60) 57
'=' (61) 11 13 66 67
'>' (62) 60
'[' (91) 67 70
']' (93) 67 70
'{' (123) 34 35
'|' (124) 58
'}' (125) 34 35
'~' (126) 51
error (256)
tNOOB (258) 8
tREAL (259) 6
tINTEGER (260) 7 24 48 67
tIDENTIFIER (261) 17 18 19
tSTRING (262) 5 49
tIF (263) 45 46
tPRINT (264) 38
tREAD (265) 40
tBEGIN (266)
tEND (267)
tREPEAT (268) 44
tNEXT (269) 41
tSTOP (270) 42
tLOCAL (271) 14
tIMPORT (272) 15
tRETURN (273) 43
tPRINTLN (274) 39
tIFX (275)
tELSE (276) 46
tNE (277) 63
tEQ (278) 64
tLE (279) 62
tGE (280) 61
tUNARY (281)
"<#>" (282) 30
"<%>" (283) 31
"<$>" (284) 32
"<*>" (285) 33
"{}" (286) 36


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
declist (55)
    on left: 1 2, on right: 0 2 34
stmtlist (56)
    on left: 3 4, on right: 4 34 35
literal (57)
    on left: 5 6 7 8, on right: 11 13
decl (58)
    on left: 9 10 11 12 13, on right: 1 2
qualifier (59)
    on left: 14 15 16, on right: 9 10 11 12 13
var (60)
    on left: 17, on right: 9 22 23 69
func (61)
    on left: 18 19, on right: 10 11 12 13
ftype (62)
    on left: 20 21, on right: 18 19
args (63)
    on left: 22 23, on right: 18 23
arg (64)
    on left: 24 25, on right: 41 42
type (65)
    on left: 26 27 28 29 30 31 32 33, on right: 9 21
block (66)
    on left: 34 35 36, on right: 12 13 47
stmt (67)
    on left: 37 38 39 40 41 42 43 44 45 46 47, on right: 3 4 44 45
    46
expr (68)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67, on right: 37 38 39 44 45 46 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64 65 66
lval (69)
    on left: 68 69, on right: 66 67 70
index (70)
    on left: 70, on right: 68


state 0

    0 $accept: . declist $end

    tLOCAL   shift, and go to state 1
    tIMPORT  shift, and go to state 2

    $default  reduce using rule 16 (qualifier)

    declist    go to state 3
    decl       go to state 4
    qualifier  go to state 5


state 1

   14 qualifier: tLOCAL .

    $default  reduce using rule 14 (qualifier)


state 2

   15 qualifier: tIMPORT .

    $default  reduce using rule 15 (qualifier)


state 3

    0 $accept: declist . $end
    2 declist: declist . decl

    $end     shift, and go to state 6
    tLOCAL   shift, and go to state 1
    tIMPORT  shift, and go to state 2

    $default  reduce using rule 16 (qualifier)

    decl       go to state 7
    qualifier  go to state 5


state 4

    1 declist: decl .

    $default  reduce using rule 1 (declist)


state 5

    9 decl: qualifier . type var
   10     | qualifier . func
   11     | qualifier . func '=' literal
   12     | qualifier . func block
   13     | qualifier . func '=' literal block

    '*'    shift, and go to state 8
    '%'    shift, and go to state 9
    '!'    shift, and go to state 10
    '#'    shift, and go to state 11
    '$'    shift, and go to state 12
    "<#>"  shift, and go to state 13
    "<%>"  shift, and go to state 14
    "<$>"  shift, and go to state 15
    "<*>"  shift, and go to state 16

    func   go to state 17
    ftype  go to state 18
    type   go to state 19


state 6

    0 $accept: declist $end .

    $default  accept


state 7

    2 declist: declist decl .

    $default  reduce using rule 2 (declist)


state 8

   29 type: '*' .

    $default  reduce using rule 29 (type)


state 9

   27 type: '%' .

    $default  reduce using rule 27 (type)


state 10

   20 ftype: '!' .

    $default  reduce using rule 20 (ftype)


state 11

   26 type: '#' .

    $default  reduce using rule 26 (type)


state 12

   28 type: '$' .

    $default  reduce using rule 28 (type)


state 13

   30 type: "<#>" .

    $default  reduce using rule 30 (type)


state 14

   31 type: "<%>" .

    $default  reduce using rule 31 (type)


state 15

   32 type: "<$>" .

    $default  reduce using rule 32 (type)


state 16

   33 type: "<*>" .

    $default  reduce using rule 33 (type)


state 17

   10 decl: qualifier func .
   11     | qualifier func . '=' literal
   12     | qualifier func . block
   13     | qualifier func . '=' literal block

    '='   shift, and go to state 20
    '{'   shift, and go to state 21
    "{}"  shift, and go to state 22

    '{'       [reduce using rule 10 (decl)]
    "{}"      [reduce using rule 10 (decl)]
    $default  reduce using rule 10 (decl)

    block  go to state 23


state 18

   18 func: ftype . tIDENTIFIER '(' args ')'
   19     | ftype . tIDENTIFIER '(' ')'

    tIDENTIFIER  shift, and go to state 24


state 19

    9 decl: qualifier type . var
   21 ftype: type .

    tIDENTIFIER  shift, and go to state 25

    tIDENTIFIER  [reduce using rule 21 (ftype)]

    var  go to state 26


state 20

   11 decl: qualifier func '=' . literal
   13     | qualifier func '=' . literal block

    tNOOB     shift, and go to state 27
    tREAL     shift, and go to state 28
    tINTEGER  shift, and go to state 29
    tSTRING   shift, and go to state 30

    literal  go to state 31


state 21

   34 block: '{' . declist stmtlist '}'
   35      | '{' . stmtlist '}'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    tIF          shift, and go to state 34
    tREAD        shift, and go to state 35
    tREPEAT      shift, and go to state 36
    tNEXT        shift, and go to state 37
    tSTOP        shift, and go to state 38
    tLOCAL       shift, and go to state 1
    tIMPORT      shift, and go to state 2
    tRETURN      shift, and go to state 39
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42
    '{'          shift, and go to state 21
    "{}"         shift, and go to state 22

    $default  reduce using rule 16 (qualifier)

    declist    go to state 43
    stmtlist   go to state 44
    decl       go to state 4
    qualifier  go to state 5
    var        go to state 45
    block      go to state 46
    stmt       go to state 47
    expr       go to state 48
    lval       go to state 49
    index      go to state 50


state 22

   36 block: "{}" .

    $default  reduce using rule 36 (block)


state 23

   12 decl: qualifier func block .

    $default  reduce using rule 12 (decl)


state 24

   18 func: ftype tIDENTIFIER . '(' args ')'
   19     | ftype tIDENTIFIER . '(' ')'

    '('  shift, and go to state 51


state 25

   17 var: tIDENTIFIER .

    $default  reduce using rule 17 (var)


state 26

    9 decl: qualifier type var .

    $default  reduce using rule 9 (decl)


state 27

    8 literal: tNOOB .

    $default  reduce using rule 8 (literal)


state 28

    6 literal: tREAL .

    $default  reduce using rule 6 (literal)


state 29

    7 literal: tINTEGER .

    $default  reduce using rule 7 (literal)


state 30

    5 literal: tSTRING .

    $default  reduce using rule 5 (literal)


state 31

   11 decl: qualifier func '=' literal .
   13     | qualifier func '=' literal . block

    '{'   shift, and go to state 21
    "{}"  shift, and go to state 22

    '{'       [reduce using rule 11 (decl)]
    "{}"      [reduce using rule 11 (decl)]
    $default  reduce using rule 11 (decl)

    block  go to state 52


state 32

   48 expr: tINTEGER .

    $default  reduce using rule 48 (expr)


state 33

   49 expr: tSTRING .

    $default  reduce using rule 49 (expr)


state 34

   45 stmt: tIF . '(' expr ')' stmt
   46     | tIF . '(' expr ')' stmt tELSE stmt

    '('  shift, and go to state 53


state 35

   40 stmt: tREAD .

    $default  reduce using rule 40 (stmt)


state 36

   44 stmt: tREPEAT . '(' expr ';' expr ';' expr ')' stmt

    '('  shift, and go to state 54


state 37

   41 stmt: tNEXT . arg ';'

    tINTEGER  shift, and go to state 55

    $default  reduce using rule 25 (arg)

    arg  go to state 56


state 38

   42 stmt: tSTOP . arg ';'

    tINTEGER  shift, and go to state 55

    $default  reduce using rule 25 (arg)

    arg  go to state 57


state 39

   43 stmt: tRETURN . ';'

    ';'  shift, and go to state 58


state 40

   50 expr: '-' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 59
    lval   go to state 49
    index  go to state 50


state 41

   51 expr: '~' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 60
    lval   go to state 49
    index  go to state 50


state 42

   65 expr: '(' . expr ')'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 61
    lval   go to state 49
    index  go to state 50


state 43

    2 declist: declist . decl
   34 block: '{' declist . stmtlist '}'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    tIF          shift, and go to state 34
    tREAD        shift, and go to state 35
    tREPEAT      shift, and go to state 36
    tNEXT        shift, and go to state 37
    tSTOP        shift, and go to state 38
    tLOCAL       shift, and go to state 1
    tIMPORT      shift, and go to state 2
    tRETURN      shift, and go to state 39
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42
    '{'          shift, and go to state 21
    "{}"         shift, and go to state 22

    $default  reduce using rule 16 (qualifier)

    stmtlist   go to state 62
    decl       go to state 7
    qualifier  go to state 5
    var        go to state 45
    block      go to state 46
    stmt       go to state 47
    expr       go to state 48
    lval       go to state 49
    index      go to state 50


state 44

    4 stmtlist: stmtlist . stmt
   35 block: '{' stmtlist . '}'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    tIF          shift, and go to state 34
    tREAD        shift, and go to state 35
    tREPEAT      shift, and go to state 36
    tNEXT        shift, and go to state 37
    tSTOP        shift, and go to state 38
    tRETURN      shift, and go to state 39
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42
    '{'          shift, and go to state 21
    '}'          shift, and go to state 63
    "{}"         shift, and go to state 22

    var    go to state 45
    block  go to state 46
    stmt   go to state 64
    expr   go to state 48
    lval   go to state 49
    index  go to state 50


state 45

   69 lval: var .

    $default  reduce using rule 69 (lval)


state 46

   47 stmt: block .

    $default  reduce using rule 47 (stmt)


state 47

    3 stmtlist: stmt .

    $default  reduce using rule 3 (stmtlist)


state 48

   37 stmt: expr . ';'
   38     | expr . tPRINT
   39     | expr . tPRINTLN
   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    tPRINT    shift, and go to state 65
    tPRINTLN  shift, and go to state 66
    '>'       shift, and go to state 67
    '<'       shift, and go to state 68
    tNE       shift, and go to state 69
    tEQ       shift, and go to state 70
    tLE       shift, and go to state 71
    tGE       shift, and go to state 72
    '+'       shift, and go to state 73
    '-'       shift, and go to state 74
    '*'       shift, and go to state 75
    '/'       shift, and go to state 76
    '%'       shift, and go to state 77
    '&'       shift, and go to state 78
    '|'       shift, and go to state 79
    ';'       shift, and go to state 80


state 49

   66 expr: lval . '=' expr
   67     | lval . '=' '[' tINTEGER ']'
   70 index: lval . '[' lval ']'

    '='  shift, and go to state 81
    '['  shift, and go to state 82


state 50

   68 lval: index .

    $default  reduce using rule 68 (lval)


state 51

   18 func: ftype tIDENTIFIER '(' . args ')'
   19     | ftype tIDENTIFIER '(' . ')'

    tIDENTIFIER  shift, and go to state 25
    ')'          shift, and go to state 83

    var   go to state 84
    args  go to state 85


state 52

   13 decl: qualifier func '=' literal block .

    $default  reduce using rule 13 (decl)


state 53

   45 stmt: tIF '(' . expr ')' stmt
   46     | tIF '(' . expr ')' stmt tELSE stmt

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 86
    lval   go to state 49
    index  go to state 50


state 54

   44 stmt: tREPEAT '(' . expr ';' expr ';' expr ')' stmt

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 87
    lval   go to state 49
    index  go to state 50


state 55

   24 arg: tINTEGER .

    $default  reduce using rule 24 (arg)


state 56

   41 stmt: tNEXT arg . ';'

    ';'  shift, and go to state 88


state 57

   42 stmt: tSTOP arg . ';'

    ';'  shift, and go to state 89


state 58

   43 stmt: tRETURN ';' .

    $default  reduce using rule 43 (stmt)


state 59

   50 expr: '-' expr .
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    $default  reduce using rule 50 (expr)


state 60

   51 expr: '~' expr .
   52     | expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    $default  reduce using rule 51 (expr)


state 61

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr
   65     | '(' expr . ')'

    '>'  shift, and go to state 67
    '<'  shift, and go to state 68
    tNE  shift, and go to state 69
    tEQ  shift, and go to state 70
    tLE  shift, and go to state 71
    tGE  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79
    ')'  shift, and go to state 90


state 62

    4 stmtlist: stmtlist . stmt
   34 block: '{' declist stmtlist . '}'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    tIF          shift, and go to state 34
    tREAD        shift, and go to state 35
    tREPEAT      shift, and go to state 36
    tNEXT        shift, and go to state 37
    tSTOP        shift, and go to state 38
    tRETURN      shift, and go to state 39
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42
    '{'          shift, and go to state 21
    '}'          shift, and go to state 91
    "{}"         shift, and go to state 22

    var    go to state 45
    block  go to state 46
    stmt   go to state 64
    expr   go to state 48
    lval   go to state 49
    index  go to state 50


state 63

   35 block: '{' stmtlist '}' .

    $default  reduce using rule 35 (block)


state 64

    4 stmtlist: stmtlist stmt .

    $default  reduce using rule 4 (stmtlist)


state 65

   38 stmt: expr tPRINT .

    $default  reduce using rule 38 (stmt)


state 66

   39 stmt: expr tPRINTLN .

    $default  reduce using rule 39 (stmt)


state 67

   60 expr: expr '>' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 92
    lval   go to state 49
    index  go to state 50


state 68

   57 expr: expr '<' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 93
    lval   go to state 49
    index  go to state 50


state 69

   63 expr: expr tNE . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 94
    lval   go to state 49
    index  go to state 50


state 70

   64 expr: expr tEQ . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 95
    lval   go to state 49
    index  go to state 50


state 71

   62 expr: expr tLE . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 96
    lval   go to state 49
    index  go to state 50


state 72

   61 expr: expr tGE . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 97
    lval   go to state 49
    index  go to state 50


state 73

   52 expr: expr '+' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 98
    lval   go to state 49
    index  go to state 50


state 74

   53 expr: expr '-' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 99
    lval   go to state 49
    index  go to state 50


state 75

   54 expr: expr '*' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 100
    lval   go to state 49
    index  go to state 50


state 76

   55 expr: expr '/' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 101
    lval   go to state 49
    index  go to state 50


state 77

   56 expr: expr '%' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 102
    lval   go to state 49
    index  go to state 50


state 78

   59 expr: expr '&' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 103
    lval   go to state 49
    index  go to state 50


state 79

   58 expr: expr '|' . expr

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 104
    lval   go to state 49
    index  go to state 50


state 80

   37 stmt: expr ';' .

    $default  reduce using rule 37 (stmt)


state 81

   66 expr: lval '=' . expr
   67     | lval '=' . '[' tINTEGER ']'

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42
    '['          shift, and go to state 105

    var    go to state 45
    expr   go to state 106
    lval   go to state 49
    index  go to state 50


state 82

   70 index: lval '[' . lval ']'

    tIDENTIFIER  shift, and go to state 25

    var    go to state 45
    lval   go to state 107
    index  go to state 50


state 83

   19 func: ftype tIDENTIFIER '(' ')' .

    $default  reduce using rule 19 (func)


state 84

   22 args: var .

    $default  reduce using rule 22 (args)


state 85

   18 func: ftype tIDENTIFIER '(' args . ')'
   23 args: args . ',' var

    ')'  shift, and go to state 108
    ','  shift, and go to state 109


state 86

   45 stmt: tIF '(' expr . ')' stmt
   46     | tIF '(' expr . ')' stmt tELSE stmt
   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '>'  shift, and go to state 67
    '<'  shift, and go to state 68
    tNE  shift, and go to state 69
    tEQ  shift, and go to state 70
    tLE  shift, and go to state 71
    tGE  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79
    ')'  shift, and go to state 110


state 87

   44 stmt: tREPEAT '(' expr . ';' expr ';' expr ')' stmt
   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '>'  shift, and go to state 67
    '<'  shift, and go to state 68
    tNE  shift, and go to state 69
    tEQ  shift, and go to state 70
    tLE  shift, and go to state 71
    tGE  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79
    ';'  shift, and go to state 111


state 88

   41 stmt: tNEXT arg ';' .

    $default  reduce using rule 41 (stmt)


state 89

   42 stmt: tSTOP arg ';' .

    $default  reduce using rule 42 (stmt)


state 90

   65 expr: '(' expr ')' .

    $default  reduce using rule 65 (expr)


state 91

   34 block: '{' declist stmtlist '}' .

    $default  reduce using rule 34 (block)


state 92

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   60     | expr '>' expr .
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 60 (expr)


state 93

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   57     | expr '<' expr .
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 57 (expr)


state 94

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   63     | expr tNE expr .
   64     | expr . tEQ expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 63 (expr)


state 95

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr
   64     | expr tEQ expr .

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 64 (expr)


state 96

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   62     | expr tLE expr .
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 62 (expr)


state 97

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   61     | expr tGE expr .
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 61 (expr)


state 98

   52 expr: expr . '+' expr
   52     | expr '+' expr .
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 52 (expr)


state 99

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   53     | expr '-' expr .
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 53 (expr)


state 100

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   54     | expr '*' expr .
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 54 (expr)


state 101

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   55     | expr '/' expr .
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 55 (expr)


state 102

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   56     | expr '%' expr .
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 56 (expr)


state 103

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   59     | expr '&' expr .
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    $default  reduce using rule 59 (expr)


state 104

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   58     | expr '|' expr .
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    $default  reduce using rule 58 (expr)


state 105

   67 expr: lval '=' '[' . tINTEGER ']'

    tINTEGER  shift, and go to state 112


state 106

   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr
   66     | lval '=' expr .

    '>'  shift, and go to state 67
    '<'  shift, and go to state 68
    tNE  shift, and go to state 69
    tEQ  shift, and go to state 70
    tLE  shift, and go to state 71
    tGE  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79

    $default  reduce using rule 66 (expr)


state 107

   70 index: lval . '[' lval ']'
   70      | lval '[' lval . ']'

    '['  shift, and go to state 82
    ']'  shift, and go to state 113


state 108

   18 func: ftype tIDENTIFIER '(' args ')' .

    $default  reduce using rule 18 (func)


state 109

   23 args: args ',' . var

    tIDENTIFIER  shift, and go to state 25

    var  go to state 114


state 110

   45 stmt: tIF '(' expr ')' . stmt
   46     | tIF '(' expr ')' . stmt tELSE stmt

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    tIF          shift, and go to state 34
    tREAD        shift, and go to state 35
    tREPEAT      shift, and go to state 36
    tNEXT        shift, and go to state 37
    tSTOP        shift, and go to state 38
    tRETURN      shift, and go to state 39
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42
    '{'          shift, and go to state 21
    "{}"         shift, and go to state 22

    var    go to state 45
    block  go to state 46
    stmt   go to state 115
    expr   go to state 48
    lval   go to state 49
    index  go to state 50


state 111

   44 stmt: tREPEAT '(' expr ';' . expr ';' expr ')' stmt

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 116
    lval   go to state 49
    index  go to state 50


state 112

   67 expr: lval '=' '[' tINTEGER . ']'

    ']'  shift, and go to state 117


state 113

   70 index: lval '[' lval ']' .

    $default  reduce using rule 70 (index)


state 114

   23 args: args ',' var .

    $default  reduce using rule 23 (args)


state 115

   45 stmt: tIF '(' expr ')' stmt .
   46     | tIF '(' expr ')' stmt . tELSE stmt

    tELSE  shift, and go to state 118

    $default  reduce using rule 45 (stmt)


state 116

   44 stmt: tREPEAT '(' expr ';' expr . ';' expr ')' stmt
   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '>'  shift, and go to state 67
    '<'  shift, and go to state 68
    tNE  shift, and go to state 69
    tEQ  shift, and go to state 70
    tLE  shift, and go to state 71
    tGE  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79
    ';'  shift, and go to state 119


state 117

   67 expr: lval '=' '[' tINTEGER ']' .

    $default  reduce using rule 67 (expr)


state 118

   46 stmt: tIF '(' expr ')' stmt tELSE . stmt

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    tIF          shift, and go to state 34
    tREAD        shift, and go to state 35
    tREPEAT      shift, and go to state 36
    tNEXT        shift, and go to state 37
    tSTOP        shift, and go to state 38
    tRETURN      shift, and go to state 39
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42
    '{'          shift, and go to state 21
    "{}"         shift, and go to state 22

    var    go to state 45
    block  go to state 46
    stmt   go to state 120
    expr   go to state 48
    lval   go to state 49
    index  go to state 50


state 119

   44 stmt: tREPEAT '(' expr ';' expr ';' . expr ')' stmt

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42

    var    go to state 45
    expr   go to state 121
    lval   go to state 49
    index  go to state 50


state 120

   46 stmt: tIF '(' expr ')' stmt tELSE stmt .

    $default  reduce using rule 46 (stmt)


state 121

   44 stmt: tREPEAT '(' expr ';' expr ';' expr . ')' stmt
   52 expr: expr . '+' expr
   53     | expr . '-' expr
   54     | expr . '*' expr
   55     | expr . '/' expr
   56     | expr . '%' expr
   57     | expr . '<' expr
   58     | expr . '|' expr
   59     | expr . '&' expr
   60     | expr . '>' expr
   61     | expr . tGE expr
   62     | expr . tLE expr
   63     | expr . tNE expr
   64     | expr . tEQ expr

    '>'  shift, and go to state 67
    '<'  shift, and go to state 68
    tNE  shift, and go to state 69
    tEQ  shift, and go to state 70
    tLE  shift, and go to state 71
    tGE  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    '&'  shift, and go to state 78
    '|'  shift, and go to state 79
    ')'  shift, and go to state 122


state 122

   44 stmt: tREPEAT '(' expr ';' expr ';' expr ')' . stmt

    tINTEGER     shift, and go to state 32
    tIDENTIFIER  shift, and go to state 25
    tSTRING      shift, and go to state 33
    tIF          shift, and go to state 34
    tREAD        shift, and go to state 35
    tREPEAT      shift, and go to state 36
    tNEXT        shift, and go to state 37
    tSTOP        shift, and go to state 38
    tRETURN      shift, and go to state 39
    '-'          shift, and go to state 40
    '~'          shift, and go to state 41
    '('          shift, and go to state 42
    '{'          shift, and go to state 21
    "{}"         shift, and go to state 22

    var    go to state 45
    block  go to state 46
    stmt   go to state 123
    expr   go to state 48
    lval   go to state 49
    index  go to state 50


state 123

   44 stmt: tREPEAT '(' expr ';' expr ';' expr ')' stmt .

    $default  reduce using rule 44 (stmt)
