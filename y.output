Terminals unused in grammar

   tBEGIN
   tEND


Grammar

    0 $accept: file $end

    1 file: declist

    2 declist: decl
    3        | declist decl

    4 stmtlist: stmt
    5         | stmtlist stmt

    6 literal: tSTRING
    7        | tREAL
    8        | tINTEGER
    9        | tNOOB

   10 decl: vardecl ';'
   11     | funcdecl

   12 vardecl: qualifier type var
   13        | qualifier type var '=' expr

   14 funcdecl: qualifier func
   15         | qualifier func '=' literal
   16         | qualifier func block
   17         | qualifier func '=' literal block

   18 funcall: tIDENTIFIER '(' argscall ')'
   19        | tIDENTIFIER '(' ')'

   20 qualifier: tLOCAL
   21          | tIMPORT
   22          | /* empty */

   23 var: tIDENTIFIER

   24 func: type tIDENTIFIER '(' ')'
   25     | type tIDENTIFIER '(' argsdecl ')'
   26     | '!' tIDENTIFIER '(' ')'
   27     | '!' tIDENTIFIER '(' argsdecl ')'

   28 argsdecl: vardecl
   29         | argsdecl ',' vardecl

   30 argscall: expr
   31         | argscall ',' expr

   32 arg: tINTEGER
   33    | /* empty */

   34 type: '#'
   35     | '%'
   36     | '$'
   37     | '*'
   38     | "<#>"
   39     | "<%>"
   40     | "<$>"
   41     | "<*>"

   42 block: '{' declist stmtlist '}'
   43      | '{' stmtlist '}'
   44      | '{' declist '}'
   45      | '{' '}'

   46 stmt: expr ';'
   47     | expr '!'
   48     | expr tPRINTLN
   49     | tREAD
   50     | tNEXT arg ';'
   51     | tSTOP arg ';'
   52     | tRETURN
   53     | tREPEAT '(' exprlist ';' exprlist ';' exprlist ')' stmt
   54     | tIF '(' expr ')' stmt
   55     | tIF '(' expr ')' stmt tELSE stmt
   56     | block

   57 exprlist: expr
   58         | exprlist ',' expr

   59 string: tSTRING
   60       | string tSTRING

   61 expr: tINTEGER
   62     | string
   63     | '-' expr
   64     | '~' expr
   65     | expr '+' expr
   66     | expr '-' expr
   67     | expr '*' expr
   68     | expr '/' expr
   69     | expr '%' expr
   70     | expr '<' expr
   71     | expr '|' expr
   72     | expr '&' expr
   73     | expr '>' expr
   74     | expr tGE expr
   75     | expr tLE expr
   76     | expr tNE expr
   77     | expr tEQ expr
   78     | '(' expr ')'
   79     | lval '=' expr
   80     | lval '=' '[' tINTEGER ']'
   81     | lval
   82     | funcall

   83 lval: index
   84     | var

   85 index: lval '[' lval ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 26 27 47
'#' (35) 34
'$' (36) 36
'%' (37) 35 69
'&' (38) 72
'(' (40) 18 19 24 25 26 27 53 54 55 78
')' (41) 18 19 24 25 26 27 53 54 55 78
'*' (42) 37 67
'+' (43) 65
',' (44) 29 31 58
'-' (45) 63 66
'/' (47) 68
';' (59) 10 46 50 51 53
'<' (60) 70
'=' (61) 13 15 17 79 80
'>' (62) 73
'[' (91) 80 85
']' (93) 80 85
'{' (123) 42 43 44 45
'|' (124) 71
'}' (125) 42 43 44 45
'~' (126) 64
error (256)
tNOOB (258) 9
tREAL (259) 7
tINTEGER (260) 8 32 61 80
tIDENTIFIER (261) 18 19 23 24 25 26 27
tSTRING (262) 6 59 60
tIF (263) 54 55
tREAD (264) 49
tBEGIN (265)
tEND (266)
tREPEAT (267) 53
tNEXT (268) 50
tSTOP (269) 51
tLOCAL (270) 20
tIMPORT (271) 21
tRETURN (272) 52
tPRINTLN (273) 48
tIFX (274)
tELSE (275) 55
LOWER_THAN_ELSE (276)
tNE (277) 76
tEQ (278) 77
tLE (279) 75
tGE (280) 74
tUNARY (281)
"<#>" (282) 38
"<%>" (283) 39
"<$>" (284) 40
"<*>" (285) 41


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
file (54)
    on left: 1, on right: 0
declist (55)
    on left: 2 3, on right: 1 3 42 44
stmtlist (56)
    on left: 4 5, on right: 5 42 43
literal (57)
    on left: 6 7 8 9, on right: 15 17
decl (58)
    on left: 10 11, on right: 2 3
vardecl (59)
    on left: 12 13, on right: 10 28 29
funcdecl (60)
    on left: 14 15 16 17, on right: 11
funcall (61)
    on left: 18 19, on right: 82
qualifier (62)
    on left: 20 21 22, on right: 12 13 14 15 16 17
var (63)
    on left: 23, on right: 12 13 84
func (64)
    on left: 24 25 26 27, on right: 14 15 16 17
argsdecl (65)
    on left: 28 29, on right: 25 27 29
argscall (66)
    on left: 30 31, on right: 18 31
arg (67)
    on left: 32 33, on right: 50 51
type (68)
    on left: 34 35 36 37 38 39 40 41, on right: 12 13 24 25
block (69)
    on left: 42 43 44 45, on right: 16 17 56
stmt (70)
    on left: 46 47 48 49 50 51 52 53 54 55 56, on right: 4 5 53 54
    55
exprlist (71)
    on left: 57 58, on right: 53 58
string (72)
    on left: 59 60, on right: 60 62
expr (73)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80 81 82, on right: 13 30 31 46 47 48 54 55 57 58 63 64 65 66
    67 68 69 70 71 72 73 74 75 76 77 78 79
lval (74)
    on left: 83 84, on right: 79 80 81 85
index (75)
    on left: 85, on right: 83


state 0

    0 $accept: . file $end

    tLOCAL   shift, and go to state 1
    tIMPORT  shift, and go to state 2

    $default  reduce using rule 22 (qualifier)

    file       go to state 3
    declist    go to state 4
    decl       go to state 5
    vardecl    go to state 6
    funcdecl   go to state 7
    qualifier  go to state 8


state 1

   20 qualifier: tLOCAL .

    $default  reduce using rule 20 (qualifier)


state 2

   21 qualifier: tIMPORT .

    $default  reduce using rule 21 (qualifier)


state 3

    0 $accept: file . $end

    $end  shift, and go to state 9


state 4

    1 file: declist .
    3 declist: declist . decl

    tLOCAL   shift, and go to state 1
    tIMPORT  shift, and go to state 2

    $end      reduce using rule 1 (file)
    $default  reduce using rule 22 (qualifier)

    decl       go to state 10
    vardecl    go to state 6
    funcdecl   go to state 7
    qualifier  go to state 8


state 5

    2 declist: decl .

    $default  reduce using rule 2 (declist)


state 6

   10 decl: vardecl . ';'

    ';'  shift, and go to state 11


state 7

   11 decl: funcdecl .

    $default  reduce using rule 11 (decl)


state 8

   12 vardecl: qualifier . type var
   13        | qualifier . type var '=' expr
   14 funcdecl: qualifier . func
   15         | qualifier . func '=' literal
   16         | qualifier . func block
   17         | qualifier . func '=' literal block

    '*'    shift, and go to state 12
    '%'    shift, and go to state 13
    '!'    shift, and go to state 14
    '#'    shift, and go to state 15
    '$'    shift, and go to state 16
    "<#>"  shift, and go to state 17
    "<%>"  shift, and go to state 18
    "<$>"  shift, and go to state 19
    "<*>"  shift, and go to state 20

    func  go to state 21
    type  go to state 22


state 9

    0 $accept: file $end .

    $default  accept


state 10

    3 declist: declist decl .

    $default  reduce using rule 3 (declist)


state 11

   10 decl: vardecl ';' .

    $default  reduce using rule 10 (decl)


state 12

   37 type: '*' .

    $default  reduce using rule 37 (type)


state 13

   35 type: '%' .

    $default  reduce using rule 35 (type)


state 14

   26 func: '!' . tIDENTIFIER '(' ')'
   27     | '!' . tIDENTIFIER '(' argsdecl ')'

    tIDENTIFIER  shift, and go to state 23


state 15

   34 type: '#' .

    $default  reduce using rule 34 (type)


state 16

   36 type: '$' .

    $default  reduce using rule 36 (type)


state 17

   38 type: "<#>" .

    $default  reduce using rule 38 (type)


state 18

   39 type: "<%>" .

    $default  reduce using rule 39 (type)


state 19

   40 type: "<$>" .

    $default  reduce using rule 40 (type)


state 20

   41 type: "<*>" .

    $default  reduce using rule 41 (type)


state 21

   14 funcdecl: qualifier func .
   15         | qualifier func . '=' literal
   16         | qualifier func . block
   17         | qualifier func . '=' literal block

    '='  shift, and go to state 24
    '{'  shift, and go to state 25

    $default  reduce using rule 14 (funcdecl)

    block  go to state 26


state 22

   12 vardecl: qualifier type . var
   13        | qualifier type . var '=' expr
   24 func: type . tIDENTIFIER '(' ')'
   25     | type . tIDENTIFIER '(' argsdecl ')'

    tIDENTIFIER  shift, and go to state 27

    var  go to state 28


state 23

   26 func: '!' tIDENTIFIER . '(' ')'
   27     | '!' tIDENTIFIER . '(' argsdecl ')'

    '('  shift, and go to state 29


state 24

   15 funcdecl: qualifier func '=' . literal
   17         | qualifier func '=' . literal block

    tNOOB     shift, and go to state 30
    tREAL     shift, and go to state 31
    tINTEGER  shift, and go to state 32
    tSTRING   shift, and go to state 33

    literal  go to state 34


state 25

   42 block: '{' . declist stmtlist '}'
   43      | '{' . stmtlist '}'
   44      | '{' . declist '}'
   45      | '{' . '}'

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tIF          shift, and go to state 38
    tREAD        shift, and go to state 39
    tREPEAT      shift, and go to state 40
    tNEXT        shift, and go to state 41
    tSTOP        shift, and go to state 42
    tLOCAL       shift, and go to state 1
    tIMPORT      shift, and go to state 2
    tRETURN      shift, and go to state 43
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '{'          shift, and go to state 25
    '('          shift, and go to state 46
    '}'          shift, and go to state 47

    $default  reduce using rule 22 (qualifier)

    declist    go to state 48
    stmtlist   go to state 49
    decl       go to state 5
    vardecl    go to state 6
    funcdecl   go to state 7
    funcall    go to state 50
    qualifier  go to state 8
    var        go to state 51
    block      go to state 52
    stmt       go to state 53
    string     go to state 54
    expr       go to state 55
    lval       go to state 56
    index      go to state 57


state 26

   16 funcdecl: qualifier func block .

    $default  reduce using rule 16 (funcdecl)


state 27

   23 var: tIDENTIFIER .
   24 func: type tIDENTIFIER . '(' ')'
   25     | type tIDENTIFIER . '(' argsdecl ')'

    '('  shift, and go to state 58

    $default  reduce using rule 23 (var)


state 28

   12 vardecl: qualifier type var .
   13        | qualifier type var . '=' expr

    '='  shift, and go to state 59

    $default  reduce using rule 12 (vardecl)


state 29

   26 func: '!' tIDENTIFIER '(' . ')'
   27     | '!' tIDENTIFIER '(' . argsdecl ')'

    tLOCAL   shift, and go to state 1
    tIMPORT  shift, and go to state 2
    ')'      shift, and go to state 60

    $default  reduce using rule 22 (qualifier)

    vardecl    go to state 61
    qualifier  go to state 62
    argsdecl   go to state 63


state 30

    9 literal: tNOOB .

    $default  reduce using rule 9 (literal)


state 31

    7 literal: tREAL .

    $default  reduce using rule 7 (literal)


state 32

    8 literal: tINTEGER .

    $default  reduce using rule 8 (literal)


state 33

    6 literal: tSTRING .

    $default  reduce using rule 6 (literal)


state 34

   15 funcdecl: qualifier func '=' literal .
   17         | qualifier func '=' literal . block

    '{'  shift, and go to state 25

    $default  reduce using rule 15 (funcdecl)

    block  go to state 64


state 35

   61 expr: tINTEGER .

    $default  reduce using rule 61 (expr)


state 36

   18 funcall: tIDENTIFIER . '(' argscall ')'
   19        | tIDENTIFIER . '(' ')'
   23 var: tIDENTIFIER .

    '('  shift, and go to state 65

    $default  reduce using rule 23 (var)


state 37

   59 string: tSTRING .

    $default  reduce using rule 59 (string)


state 38

   54 stmt: tIF . '(' expr ')' stmt
   55     | tIF . '(' expr ')' stmt tELSE stmt

    '('  shift, and go to state 66


state 39

   49 stmt: tREAD .

    $default  reduce using rule 49 (stmt)


state 40

   53 stmt: tREPEAT . '(' exprlist ';' exprlist ';' exprlist ')' stmt

    '('  shift, and go to state 67


state 41

   50 stmt: tNEXT . arg ';'

    tINTEGER  shift, and go to state 68

    $default  reduce using rule 33 (arg)

    arg  go to state 69


state 42

   51 stmt: tSTOP . arg ';'

    tINTEGER  shift, and go to state 68

    $default  reduce using rule 33 (arg)

    arg  go to state 70


state 43

   52 stmt: tRETURN .

    $default  reduce using rule 52 (stmt)


state 44

   63 expr: '-' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 71
    lval     go to state 56
    index    go to state 57


state 45

   64 expr: '~' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 72
    lval     go to state 56
    index    go to state 57


state 46

   78 expr: '(' . expr ')'

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 73
    lval     go to state 56
    index    go to state 57


state 47

   45 block: '{' '}' .

    $default  reduce using rule 45 (block)


state 48

    3 declist: declist . decl
   42 block: '{' declist . stmtlist '}'
   44      | '{' declist . '}'

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tIF          shift, and go to state 38
    tREAD        shift, and go to state 39
    tREPEAT      shift, and go to state 40
    tNEXT        shift, and go to state 41
    tSTOP        shift, and go to state 42
    tLOCAL       shift, and go to state 1
    tIMPORT      shift, and go to state 2
    tRETURN      shift, and go to state 43
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '{'          shift, and go to state 25
    '('          shift, and go to state 46
    '}'          shift, and go to state 74

    $default  reduce using rule 22 (qualifier)

    stmtlist   go to state 75
    decl       go to state 10
    vardecl    go to state 6
    funcdecl   go to state 7
    funcall    go to state 50
    qualifier  go to state 8
    var        go to state 51
    block      go to state 52
    stmt       go to state 53
    string     go to state 54
    expr       go to state 55
    lval       go to state 56
    index      go to state 57


state 49

    5 stmtlist: stmtlist . stmt
   43 block: '{' stmtlist . '}'

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tIF          shift, and go to state 38
    tREAD        shift, and go to state 39
    tREPEAT      shift, and go to state 40
    tNEXT        shift, and go to state 41
    tSTOP        shift, and go to state 42
    tRETURN      shift, and go to state 43
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '{'          shift, and go to state 25
    '('          shift, and go to state 46
    '}'          shift, and go to state 76

    funcall  go to state 50
    var      go to state 51
    block    go to state 52
    stmt     go to state 77
    string   go to state 54
    expr     go to state 55
    lval     go to state 56
    index    go to state 57


state 50

   82 expr: funcall .

    $default  reduce using rule 82 (expr)


state 51

   84 lval: var .

    $default  reduce using rule 84 (lval)


state 52

   56 stmt: block .

    $default  reduce using rule 56 (stmt)


state 53

    4 stmtlist: stmt .

    $default  reduce using rule 4 (stmtlist)


state 54

   60 string: string . tSTRING
   62 expr: string .

    tSTRING  shift, and go to state 78

    $default  reduce using rule 62 (expr)


state 55

   46 stmt: expr . ';'
   47     | expr . '!'
   48     | expr . tPRINTLN
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    tPRINTLN  shift, and go to state 79
    '>'       shift, and go to state 80
    '<'       shift, and go to state 81
    tNE       shift, and go to state 82
    tEQ       shift, and go to state 83
    tLE       shift, and go to state 84
    tGE       shift, and go to state 85
    '+'       shift, and go to state 86
    '-'       shift, and go to state 87
    '*'       shift, and go to state 88
    '/'       shift, and go to state 89
    '%'       shift, and go to state 90
    '&'       shift, and go to state 91
    '|'       shift, and go to state 92
    ';'       shift, and go to state 93
    '!'       shift, and go to state 94


state 56

   79 expr: lval . '=' expr
   80     | lval . '=' '[' tINTEGER ']'
   81     | lval .
   85 index: lval . '[' lval ']'

    '='  shift, and go to state 95
    '['  shift, and go to state 96

    $default  reduce using rule 81 (expr)


state 57

   83 lval: index .

    $default  reduce using rule 83 (lval)


state 58

   24 func: type tIDENTIFIER '(' . ')'
   25     | type tIDENTIFIER '(' . argsdecl ')'

    tLOCAL   shift, and go to state 1
    tIMPORT  shift, and go to state 2
    ')'      shift, and go to state 97

    $default  reduce using rule 22 (qualifier)

    vardecl    go to state 61
    qualifier  go to state 62
    argsdecl   go to state 98


state 59

   13 vardecl: qualifier type var '=' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 99
    lval     go to state 56
    index    go to state 57


state 60

   26 func: '!' tIDENTIFIER '(' ')' .

    $default  reduce using rule 26 (func)


state 61

   28 argsdecl: vardecl .

    $default  reduce using rule 28 (argsdecl)


state 62

   12 vardecl: qualifier . type var
   13        | qualifier . type var '=' expr

    '*'    shift, and go to state 12
    '%'    shift, and go to state 13
    '#'    shift, and go to state 15
    '$'    shift, and go to state 16
    "<#>"  shift, and go to state 17
    "<%>"  shift, and go to state 18
    "<$>"  shift, and go to state 19
    "<*>"  shift, and go to state 20

    type  go to state 100


state 63

   27 func: '!' tIDENTIFIER '(' argsdecl . ')'
   29 argsdecl: argsdecl . ',' vardecl

    ')'  shift, and go to state 101
    ','  shift, and go to state 102


state 64

   17 funcdecl: qualifier func '=' literal block .

    $default  reduce using rule 17 (funcdecl)


state 65

   18 funcall: tIDENTIFIER '(' . argscall ')'
   19        | tIDENTIFIER '(' . ')'

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46
    ')'          shift, and go to state 103

    funcall   go to state 50
    var       go to state 51
    argscall  go to state 104
    string    go to state 54
    expr      go to state 105
    lval      go to state 56
    index     go to state 57


state 66

   54 stmt: tIF '(' . expr ')' stmt
   55     | tIF '(' . expr ')' stmt tELSE stmt

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 106
    lval     go to state 56
    index    go to state 57


state 67

   53 stmt: tREPEAT '(' . exprlist ';' exprlist ';' exprlist ')' stmt

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall   go to state 50
    var       go to state 51
    exprlist  go to state 107
    string    go to state 54
    expr      go to state 108
    lval      go to state 56
    index     go to state 57


state 68

   32 arg: tINTEGER .

    $default  reduce using rule 32 (arg)


state 69

   50 stmt: tNEXT arg . ';'

    ';'  shift, and go to state 109


state 70

   51 stmt: tSTOP arg . ';'

    ';'  shift, and go to state 110


state 71

   63 expr: '-' expr .
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    $default  reduce using rule 63 (expr)


state 72

   64 expr: '~' expr .
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    $default  reduce using rule 64 (expr)


state 73

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr
   78     | '(' expr . ')'

    '>'  shift, and go to state 80
    '<'  shift, and go to state 81
    tNE  shift, and go to state 82
    tEQ  shift, and go to state 83
    tLE  shift, and go to state 84
    tGE  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92
    ')'  shift, and go to state 111


state 74

   44 block: '{' declist '}' .

    $default  reduce using rule 44 (block)


state 75

    5 stmtlist: stmtlist . stmt
   42 block: '{' declist stmtlist . '}'

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tIF          shift, and go to state 38
    tREAD        shift, and go to state 39
    tREPEAT      shift, and go to state 40
    tNEXT        shift, and go to state 41
    tSTOP        shift, and go to state 42
    tRETURN      shift, and go to state 43
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '{'          shift, and go to state 25
    '('          shift, and go to state 46
    '}'          shift, and go to state 112

    funcall  go to state 50
    var      go to state 51
    block    go to state 52
    stmt     go to state 77
    string   go to state 54
    expr     go to state 55
    lval     go to state 56
    index    go to state 57


state 76

   43 block: '{' stmtlist '}' .

    $default  reduce using rule 43 (block)


state 77

    5 stmtlist: stmtlist stmt .

    $default  reduce using rule 5 (stmtlist)


state 78

   60 string: string tSTRING .

    $default  reduce using rule 60 (string)


state 79

   48 stmt: expr tPRINTLN .

    $default  reduce using rule 48 (stmt)


state 80

   73 expr: expr '>' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 113
    lval     go to state 56
    index    go to state 57


state 81

   70 expr: expr '<' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 114
    lval     go to state 56
    index    go to state 57


state 82

   76 expr: expr tNE . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 115
    lval     go to state 56
    index    go to state 57


state 83

   77 expr: expr tEQ . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 116
    lval     go to state 56
    index    go to state 57


state 84

   75 expr: expr tLE . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 117
    lval     go to state 56
    index    go to state 57


state 85

   74 expr: expr tGE . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 118
    lval     go to state 56
    index    go to state 57


state 86

   65 expr: expr '+' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 119
    lval     go to state 56
    index    go to state 57


state 87

   66 expr: expr '-' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 120
    lval     go to state 56
    index    go to state 57


state 88

   67 expr: expr '*' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 121
    lval     go to state 56
    index    go to state 57


state 89

   68 expr: expr '/' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 122
    lval     go to state 56
    index    go to state 57


state 90

   69 expr: expr '%' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 123
    lval     go to state 56
    index    go to state 57


state 91

   72 expr: expr '&' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 124
    lval     go to state 56
    index    go to state 57


state 92

   71 expr: expr '|' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 125
    lval     go to state 56
    index    go to state 57


state 93

   46 stmt: expr ';' .

    $default  reduce using rule 46 (stmt)


state 94

   47 stmt: expr '!' .

    $default  reduce using rule 47 (stmt)


state 95

   79 expr: lval '=' . expr
   80     | lval '=' . '[' tINTEGER ']'

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46
    '['          shift, and go to state 126

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 127
    lval     go to state 56
    index    go to state 57


state 96

   85 index: lval '[' . lval ']'

    tIDENTIFIER  shift, and go to state 128

    var    go to state 51
    lval   go to state 129
    index  go to state 57


state 97

   24 func: type tIDENTIFIER '(' ')' .

    $default  reduce using rule 24 (func)


state 98

   25 func: type tIDENTIFIER '(' argsdecl . ')'
   29 argsdecl: argsdecl . ',' vardecl

    ')'  shift, and go to state 130
    ','  shift, and go to state 102


state 99

   13 vardecl: qualifier type var '=' expr .
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '>'  shift, and go to state 80
    '<'  shift, and go to state 81
    tNE  shift, and go to state 82
    tEQ  shift, and go to state 83
    tLE  shift, and go to state 84
    tGE  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 13 (vardecl)


state 100

   12 vardecl: qualifier type . var
   13        | qualifier type . var '=' expr

    tIDENTIFIER  shift, and go to state 128

    var  go to state 28


state 101

   27 func: '!' tIDENTIFIER '(' argsdecl ')' .

    $default  reduce using rule 27 (func)


state 102

   29 argsdecl: argsdecl ',' . vardecl

    tLOCAL   shift, and go to state 1
    tIMPORT  shift, and go to state 2

    $default  reduce using rule 22 (qualifier)

    vardecl    go to state 131
    qualifier  go to state 62


state 103

   19 funcall: tIDENTIFIER '(' ')' .

    $default  reduce using rule 19 (funcall)


state 104

   18 funcall: tIDENTIFIER '(' argscall . ')'
   31 argscall: argscall . ',' expr

    ')'  shift, and go to state 132
    ','  shift, and go to state 133


state 105

   30 argscall: expr .
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '>'  shift, and go to state 80
    '<'  shift, and go to state 81
    tNE  shift, and go to state 82
    tEQ  shift, and go to state 83
    tLE  shift, and go to state 84
    tGE  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 30 (argscall)


state 106

   54 stmt: tIF '(' expr . ')' stmt
   55     | tIF '(' expr . ')' stmt tELSE stmt
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '>'  shift, and go to state 80
    '<'  shift, and go to state 81
    tNE  shift, and go to state 82
    tEQ  shift, and go to state 83
    tLE  shift, and go to state 84
    tGE  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92
    ')'  shift, and go to state 134


state 107

   53 stmt: tREPEAT '(' exprlist . ';' exprlist ';' exprlist ')' stmt
   58 exprlist: exprlist . ',' expr

    ';'  shift, and go to state 135
    ','  shift, and go to state 136


state 108

   57 exprlist: expr .
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '>'  shift, and go to state 80
    '<'  shift, and go to state 81
    tNE  shift, and go to state 82
    tEQ  shift, and go to state 83
    tLE  shift, and go to state 84
    tGE  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 57 (exprlist)


state 109

   50 stmt: tNEXT arg ';' .

    $default  reduce using rule 50 (stmt)


state 110

   51 stmt: tSTOP arg ';' .

    $default  reduce using rule 51 (stmt)


state 111

   78 expr: '(' expr ')' .

    $default  reduce using rule 78 (expr)


state 112

   42 block: '{' declist stmtlist '}' .

    $default  reduce using rule 42 (block)


state 113

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   73     | expr '>' expr .
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 73 (expr)


state 114

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   70     | expr '<' expr .
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 70 (expr)


state 115

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   76     | expr tNE expr .
   77     | expr . tEQ expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 76 (expr)


state 116

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr
   77     | expr tEQ expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 77 (expr)


state 117

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   75     | expr tLE expr .
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 75 (expr)


state 118

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   74     | expr tGE expr .
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 74 (expr)


state 119

   65 expr: expr . '+' expr
   65     | expr '+' expr .
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 65 (expr)


state 120

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   66     | expr '-' expr .
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 66 (expr)


state 121

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   67     | expr '*' expr .
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 67 (expr)


state 122

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   68     | expr '/' expr .
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 68 (expr)


state 123

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   69     | expr '%' expr .
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 69 (expr)


state 124

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   72     | expr '&' expr .
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    $default  reduce using rule 72 (expr)


state 125

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   71     | expr '|' expr .
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    $default  reduce using rule 71 (expr)


state 126

   80 expr: lval '=' '[' . tINTEGER ']'

    tINTEGER  shift, and go to state 137


state 127

   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr
   79     | lval '=' expr .

    '>'  shift, and go to state 80
    '<'  shift, and go to state 81
    tNE  shift, and go to state 82
    tEQ  shift, and go to state 83
    tLE  shift, and go to state 84
    tGE  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 79 (expr)


state 128

   23 var: tIDENTIFIER .

    $default  reduce using rule 23 (var)


state 129

   85 index: lval . '[' lval ']'
   85      | lval '[' lval . ']'

    '['  shift, and go to state 96
    ']'  shift, and go to state 138


state 130

   25 func: type tIDENTIFIER '(' argsdecl ')' .

    $default  reduce using rule 25 (func)


state 131

   29 argsdecl: argsdecl ',' vardecl .

    $default  reduce using rule 29 (argsdecl)


state 132

   18 funcall: tIDENTIFIER '(' argscall ')' .

    $default  reduce using rule 18 (funcall)


state 133

   31 argscall: argscall ',' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 139
    lval     go to state 56
    index    go to state 57


state 134

   54 stmt: tIF '(' expr ')' . stmt
   55     | tIF '(' expr ')' . stmt tELSE stmt

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tIF          shift, and go to state 38
    tREAD        shift, and go to state 39
    tREPEAT      shift, and go to state 40
    tNEXT        shift, and go to state 41
    tSTOP        shift, and go to state 42
    tRETURN      shift, and go to state 43
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '{'          shift, and go to state 25
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    block    go to state 52
    stmt     go to state 140
    string   go to state 54
    expr     go to state 55
    lval     go to state 56
    index    go to state 57


state 135

   53 stmt: tREPEAT '(' exprlist ';' . exprlist ';' exprlist ')' stmt

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall   go to state 50
    var       go to state 51
    exprlist  go to state 141
    string    go to state 54
    expr      go to state 108
    lval      go to state 56
    index     go to state 57


state 136

   58 exprlist: exprlist ',' . expr

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    string   go to state 54
    expr     go to state 142
    lval     go to state 56
    index    go to state 57


state 137

   80 expr: lval '=' '[' tINTEGER . ']'

    ']'  shift, and go to state 143


state 138

   85 index: lval '[' lval ']' .

    $default  reduce using rule 85 (index)


state 139

   31 argscall: argscall ',' expr .
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '>'  shift, and go to state 80
    '<'  shift, and go to state 81
    tNE  shift, and go to state 82
    tEQ  shift, and go to state 83
    tLE  shift, and go to state 84
    tGE  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 31 (argscall)


state 140

   54 stmt: tIF '(' expr ')' stmt .
   55     | tIF '(' expr ')' stmt . tELSE stmt

    tELSE  shift, and go to state 144

    $default  reduce using rule 54 (stmt)


state 141

   53 stmt: tREPEAT '(' exprlist ';' exprlist . ';' exprlist ')' stmt
   58 exprlist: exprlist . ',' expr

    ';'  shift, and go to state 145
    ','  shift, and go to state 136


state 142

   58 exprlist: exprlist ',' expr .
   65 expr: expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | expr . '<' expr
   71     | expr . '|' expr
   72     | expr . '&' expr
   73     | expr . '>' expr
   74     | expr . tGE expr
   75     | expr . tLE expr
   76     | expr . tNE expr
   77     | expr . tEQ expr

    '>'  shift, and go to state 80
    '<'  shift, and go to state 81
    tNE  shift, and go to state 82
    tEQ  shift, and go to state 83
    tLE  shift, and go to state 84
    tGE  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    '&'  shift, and go to state 91
    '|'  shift, and go to state 92

    $default  reduce using rule 58 (exprlist)


state 143

   80 expr: lval '=' '[' tINTEGER ']' .

    $default  reduce using rule 80 (expr)


state 144

   55 stmt: tIF '(' expr ')' stmt tELSE . stmt

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tIF          shift, and go to state 38
    tREAD        shift, and go to state 39
    tREPEAT      shift, and go to state 40
    tNEXT        shift, and go to state 41
    tSTOP        shift, and go to state 42
    tRETURN      shift, and go to state 43
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '{'          shift, and go to state 25
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    block    go to state 52
    stmt     go to state 146
    string   go to state 54
    expr     go to state 55
    lval     go to state 56
    index    go to state 57


state 145

   53 stmt: tREPEAT '(' exprlist ';' exprlist ';' . exprlist ')' stmt

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '('          shift, and go to state 46

    funcall   go to state 50
    var       go to state 51
    exprlist  go to state 147
    string    go to state 54
    expr      go to state 108
    lval      go to state 56
    index     go to state 57


state 146

   55 stmt: tIF '(' expr ')' stmt tELSE stmt .

    $default  reduce using rule 55 (stmt)


state 147

   53 stmt: tREPEAT '(' exprlist ';' exprlist ';' exprlist . ')' stmt
   58 exprlist: exprlist . ',' expr

    ')'  shift, and go to state 148
    ','  shift, and go to state 136


state 148

   53 stmt: tREPEAT '(' exprlist ';' exprlist ';' exprlist ')' . stmt

    tINTEGER     shift, and go to state 35
    tIDENTIFIER  shift, and go to state 36
    tSTRING      shift, and go to state 37
    tIF          shift, and go to state 38
    tREAD        shift, and go to state 39
    tREPEAT      shift, and go to state 40
    tNEXT        shift, and go to state 41
    tSTOP        shift, and go to state 42
    tRETURN      shift, and go to state 43
    '-'          shift, and go to state 44
    '~'          shift, and go to state 45
    '{'          shift, and go to state 25
    '('          shift, and go to state 46

    funcall  go to state 50
    var      go to state 51
    block    go to state 52
    stmt     go to state 149
    string   go to state 54
    expr     go to state 55
    lval     go to state 56
    index    go to state 57


state 149

   53 stmt: tREPEAT '(' exprlist ';' exprlist ';' exprlist ')' stmt .

    $default  reduce using rule 53 (stmt)
